/**
 * {file_name}
 * This file was generated by the db-schema-generator
 *
 * Happy Hacking!
**/
use crate::schema::SummaryPrime;
use diesel::prelude::*;

#[derive(Debug, GraphQLObject, Insertable, Queryable)]
#[table_name = "SummaryPrime"]
pub struct SummaryPrimeT {
    pub id: i32,
    pub NYC_PROBABLE_CASE_COUNT: Option<i32>,
    pub NYC_HOSPITALIZED_COUNT: Option<i32>,
    pub NYC_CASE_COUNT: Option<i32>,
    pub NYC_TOTAL_CASE_COUNT: Option<i32>,
    pub NYC_TOTAL_DEATH_COUNT: Option<i32>,
    pub DATE_UPDATED: Option<String>,
    pub NYC_PROBABLE_DEATH_COUNT: Option<i32>,
    pub NYC_CONFIRMED_DEATH_COUNT: Option<i32>,
    pub date: Option<String>,
}

pub fn read(conn: &PgConnection) -> Vec<SummaryPrimeT> {
    SummaryPrime::table
        .order(SummaryPrime::date.asc())
        .load::<SummaryPrimeT>(conn)
        .expect("Error loading object")
}
