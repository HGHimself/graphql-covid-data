/**
 * {file_name}
 * This file was generated by the db-schema-generator
 *
 * Happy Hacking!
**/

use crate::schema::GroupCasesByBoro;
use diesel::prelude::*;


#[derive(Debug,GraphQLObject,Insertable,Queryable,)]
#[table_name="GroupCasesByBoro"]
pub struct GroupCasesByBoroT {
    pub id: i32,
    pub group: Option<String>,
    pub subgroup: Option<String>,
    pub BK_CASE_COUNT: Option<f64>,
    pub BK_CASE_RATE: Option<f64>,
    pub BX_CASE_COUNT: Option<f64>,
    pub BX_CASE_RATE: Option<f64>,
    pub MN_CASE_COUNT: Option<f64>,
    pub MN_CASE_RATE: Option<f64>,
    pub QN_CASE_COUNT: Option<f64>,
    pub QN_CASE_RATE: Option<f64>,
    pub SI_CASE_COUNT: Option<f64>,
    pub SI_CASE_RATE: Option<f64>,
    pub date: Option<String>,
}

pub fn read(conn: &PgConnection) -> Vec<GroupCasesByBoroT> {
    GroupCasesByBoro::table
        .order(GroupCasesByBoro::date.asc())
        .load::<GroupCasesByBoroT>(conn)
        .expect("Error loading object")
}
