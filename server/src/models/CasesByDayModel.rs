/**
 * {file_name}
 * This file was generated by the db-schema-generator
 *
 * Happy Hacking!
**/

use crate::schema::CasesByDay;
use diesel::prelude::*;


#[derive(Debug,GraphQLObject,Insertable,Queryable,)]
#[table_name="CasesByDay"]
pub struct CasesByDayT {
    pub id: i32,
    pub date_of_interest: Option<String>,
    pub CASE_COUNT: Option<i64>,
    pub PROBABLE_CASE_COUNT: Option<i64>,
    pub CASE_COUNT_7DAY_AVG: Option<i64>,
    pub ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub BX_CASE_COUNT: Option<i64>,
    pub BX_PROBABLE_CASE_COUNT: Option<i64>,
    pub BX_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub BX_ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub BK_CASE_COUNT: Option<i64>,
    pub BK_PROBABLE_CASE_COUNT: Option<i64>,
    pub BK_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub BK_ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub MN_CASE_COUNT: Option<i64>,
    pub MN_PROBABLE_CASE_COUNT: Option<i64>,
    pub MN_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub MN_ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub QN_CASE_COUNT: Option<i64>,
    pub QN_PROBABLE_CASE_COUNT: Option<i64>,
    pub QN_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub QN_ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub SI_CASE_COUNT: Option<i64>,
    pub SI_PROBABLE_CASE_COUNT: Option<i64>,
    pub SI_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub SI_ALL_CASE_COUNT_7DAY_AVG: Option<i64>,
    pub INCOMPLETE: Option<i64>,
}

pub fn read(conn: &PgConnection) -> Vec<CasesByDayT> {
    CasesByDay::table
        .order(CasesByDay::date.asc())
        .load::<CasesByDayT>(conn)
        .expect("Error loading object")
}
